plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.4'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

    // Cloud dependencies - optional for local development
    implementation('org.springframework.cloud:spring-cloud-netflix-eureka-client') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-starter-netflix-ribbon'
        exclude group: 'io.micrometer', module: 'micrometer-tracing-bridge-brave'
        exclude group: 'io.zipkin.reporter2', module: 'zipkin-reporter-brave'
    }
    implementation('org.springframework.cloud:spring-cloud-starter-config') {
        exclude group: 'org.springframework.cloud', module: 'spring-cloud-config-server'
        exclude group: 'io.micrometer', module: 'micrometer-tracing-bridge-brave'
        exclude group: 'io.zipkin.reporter2', module: 'zipkin-reporter-brave'
    }
    implementation('org.springframework.cloud:spring-cloud-starter') {
        exclude group: 'io.micrometer', module: 'micrometer-tracing-bridge-brave'
        exclude group: 'io.zipkin.reporter2', module: 'zipkin-reporter-brave'
        exclude group: 'org.springframework.data', module: 'spring-data-redis'
    }

    // Redis dependency - placed at end to avoid conflicts
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2' // For testing and local development
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}


